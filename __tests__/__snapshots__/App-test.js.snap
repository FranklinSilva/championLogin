// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`champion renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#eee",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#032f62",
        "borderBottomWidth": 0.3,
        "borderColor": "#a9a9a9",
        "flexDirection": "row",
        "justifyContent": "center",
        "marginTop": 0,
        "paddingHorizontal": 25,
        "paddingVertical": 10,
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    />
    <Text
      style={
        Object {
          "color": "#fff",
          "fontSize": 18,
          "fontWeight": "500",
          "textAlign": "center",
        }
      }
    >
      Your Information
    </Text>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "flex-end",
          "flex": 1,
          "opacity": 1,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={
          Object {
            "testUri": "../../../src/images/exit.png",
          }
        }
        style={
          Object {
            "borderRadius": 8,
            "height": 17,
            "width": 17,
          }
        }
      />
    </View>
  </View>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "alignItems": "center",
        "justifyContent": "center",
      }
    }
    style={
      Object {
        "backgroundColor": "#eee",
      }
    }
  >
    <View>
      <View
        style={
          Object {
            "alignSelf": "center",
            "marginTop": 30,
          }
        }
      >
        <Image
          resizeMode="contain"
          source={
            Object {
              "uri": undefined,
            }
          }
          style={
            Object {
              "borderRadius": 8,
              "height": 150,
              "width": 200,
            }
          }
        />
        <Text
          style={
            Object {
              "color": "#454F63",
              "fontSize": 16,
              "fontWeight": "800",
              "marginTop": 10,
              "textAlign": "center",
            }
          }
        />
        <Text
          style={
            Object {
              "color": "#666",
              "fontSize": 14,
              "fontWeight": "500",
              "textAlign": "center",
            }
          }
        />
        <Text
          style={
            Object {
              "color": "#666",
              "fontSize": 14,
              "fontWeight": "500",
              "textAlign": "center",
            }
          }
        />
      </View>
      <View
        style={
          Object {
            "flexDirection": "row",
            "marginTop": 10,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#05264c",
              "borderRadius": 6,
              "height": 60,
              "justifyContent": "center",
              "marginRight": 15,
              "padding": 10,
              "width": 100,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#fff",
                "fontSize": 14,
                "fontWeight": "500",
                "textAlign": "center",
              }
            }
          />
          <Text
            style={
              Object {
                "color": "#fff",
                "fontSize": 14,
                "fontWeight": "500",
                "textAlign": "center",
              }
            }
          >
            Repositories
          </Text>
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#065ec5",
              "borderRadius": 6,
              "height": 60,
              "justifyContent": "center",
              "marginLeft": 15,
              "padding": 10,
              "width": 100,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#fff",
                "fontSize": 14,
                "fontWeight": "500",
                "textAlign": "center",
              }
            }
          />
          <Text
            style={
              Object {
                "color": "#fff",
                "fontSize": 14,
                "fontWeight": "500",
                "textAlign": "center",
              }
            }
          >
            Gists
          </Text>
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#e37a7a",
            "borderRadius": 6,
            "marginTop": 30,
            "opacity": 1,
            "padding": 10,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#fff",
              "fontSize": 14,
              "fontWeight": "500",
              "textAlign": "center",
            }
          }
        >
          Logout and Revoke Token
        </Text>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`welcome renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#eee",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#032f62",
        "borderBottomWidth": 0.3,
        "borderColor": "#a9a9a9",
        "justifyContent": "center",
        "marginTop": 0,
        "padding": 10,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#fff",
          "fontSize": 18,
          "fontWeight": "500",
          "textAlign": "center",
        }
      }
    >
      Champion Login
    </Text>
    <Text
      style={
        Object {
          "color": "#fff",
          "fontSize": 14,
          "fontWeight": "500",
          "textAlign": "center",
        }
      }
    >
      Access your Github information
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "center",
        "flex": 1,
        "justifyContent": "center",
        "marginTop": 0,
      }
    }
  >
    <Image
      resizeMode="contain"
      source={
        Object {
          "testUri": "../../../src/images/Octocat.png",
        }
      }
      style={
        Object {
          "height": 150,
          "width": 200,
        }
      }
    />
    <View
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "marginTop": 20,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#666",
            "fontSize": 14,
            "marginLeft": 5,
          }
        }
      >
        Auto login has failed
      </Text>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#010b18",
            "marginTop": 10,
            "opacity": 1,
            "padding": 10,
            "width": 180,
          }
        }
        testID="gitHubLogin"
      >
        <Text
          style={
            Object {
              "color": "#fff",
              "fontSize": 12,
              "textAlign": "center",
            }
          }
        >
          Login with your Github Account
        </Text>
      </View>
    </View>
    <Modal
      animationType="none"
      hardwareAccelerated={false}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      onRequestClose={[Function]}
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
      transparent={true}
      visible={false}
    >
      <View
        accessible={true}
        focusable={true}
        forwardedRef={[Function]}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "height": 750,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "width": 750,
          }
        }
      />
      <View
        forwardedRef={[Function]}
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        onRequestClose={[Function]}
        pointerEvents="box-none"
        scrollHorizontal={false}
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        style={
          Object {
            "flex": 1,
            "justifyContent": "flex-end",
            "margin": 0,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          }
        }
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
              "margin": 0,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": undefined,
                "flex": 1,
                "height": 750,
                "justifyContent": "space-between",
                "paddingVertical": 0,
                "width": 750,
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#032f62",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "paddingHorizontal": 20,
                  "paddingVertical": 10,
                  "width": 750,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#fff",
                    "fontSize": 16,
                  }
                }
              >
                Revoke you access
              </Text>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#fff",
                      "fontSize": 14,
                      "textAlign": "center",
                    }
                  }
                >
                  Close
                </Text>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                    "overflow": "hidden",
                  },
                  undefined,
                ]
              }
            >
              <RNCWebView
                cacheEnabled={true}
                injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
                injectedJavaScriptForMainFrameOnly={true}
                javaScriptEnabled={true}
                messagingEnabled={false}
                onContentProcessDidTerminate={[Function]}
                onHttpError={[Function]}
                onLoadingError={[Function]}
                onLoadingFinish={[Function]}
                onLoadingProgress={[Function]}
                onLoadingStart={[Function]}
                onMessage={[Function]}
                onShouldStartLoadWithRequest={[Function]}
                source={
                  Object {
                    "uri": undefined,
                  }
                }
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    Object {
                      "backgroundColor": "#ffffff",
                    },
                    Object {
                      "flex": 10,
                      "marginTop": 0,
                    },
                  ]
                }
                useSharedProcessPool={true}
              />
            </View>
          </View>
        </View>
      </View>
    </Modal>
  </View>
</View>
`;
